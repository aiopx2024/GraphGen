# GraphGen 离线部署 Dockerfile
# 适用于实验室内网环境，包含所有必要的依赖和配置

FROM python:3.10-slim

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    build-essential \
    curl \
    wget \
    unzip \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 创建非root用户和基础目录结构
RUN useradd -m -u 1000 graphgen && \
    mkdir -p /app/cache /app/logs /app/resources/nltk_data && \
    chown -R graphgen:graphgen /app

# 复制requirements并安装依赖
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# 预下载NLTK数据（在复制应用代码前，利用Docker缓存）
# 使用国内镜像源加速下载
RUN python -c "\
import os; \
os.environ['NLTK_DATA'] = '/app/resources/nltk_data'; \
import nltk; \
nltk.download('punkt', download_dir='/app/resources/nltk_data', quiet=True); \
print('✅ NLTK数据下载完成')\
" || echo "⚠️  NLTK数据下载失败，将在运行时重试"

# 复制应用代码（放在最后，避免代码变更影响前面的缓存）
# .dockerignore 文件会自动过滤不需要的文件和目录
COPY --chown=graphgen:graphgen . .

# 最终设置目录权限
RUN chown -R graphgen:graphgen /app/cache /app/logs

# 设置NLTK数据路径
ENV NLTK_DATA=/app/resources/nltk_data

# 默认环境变量（可在运行时覆盖）
ENV SYNTHESIZER_MODEL="Qwen/Qwen2.5-7B-Instruct"
ENV SYNTHESIZER_BASE_URL="https://api.siliconflow.cn/v1"
ENV SYNTHESIZER_API_KEY=""
ENV TRAINEE_MODEL="Qwen/Qwen2.5-7B-Instruct"
ENV TRAINEE_BASE_URL="https://api.siliconflow.cn/v1"
ENV TRAINEE_API_KEY=""
ENV RPM="1000"
ENV TPM="50000"

# 暴露端口
EXPOSE 7860

# 切换到非root用户
USER graphgen

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/ || exit 1

# 启动命令
CMD ["python", "-m", "webui.app"]